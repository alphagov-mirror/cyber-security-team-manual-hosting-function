resources:
- name: firebreak-q1-faas-git
  type: git
  source:
    branch: master
    private_key: ((firebreak-q1-faas-read-only-ssh-private-key))
    uri: git@github.com:alphagov/firebreak-q1-faas.git

- name: cyber-security-team-manual-git
  type: git
  source:
    branch: master
    private_key: ((cyber-security-team-manual-read-only-ssh-private-key))
    uri: git@github.com:alphagov/cyber-security-team-manual.git

jobs:
- name: deploy-firebreak-q1-faas
  serial: true
  plan:
  - get: firebreak-q1-faas-git
    trigger: true
  - get: cyber-security-team-manual-git
    trigger: true

  - task: build-team-manual-docs
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ruby
          tag: 2.6.2
      run:
        path: bash
        args:
        - -c
        - |
          set -ueo pipefail

          # Concourse inputs and outputs cannot be the same directory
          # cyber-security-team-manual-build will be deployed to paas
          # after everything has been built
          cp -R cyber-security-team-manual-git/* cyber-security-team-manual-build/

          cd cyber-security-team-manual-build

          # Node.js is required for building assets
          apt-get update
          apt-get install -y nodejs

          bundle install
          bundle exec middleman build
      inputs:
      - name: cyber-security-team-manual-git
      outputs:
      - name: cyber-security-team-manual-build

  - task: build-python-lambda-zip
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: python
	  tag: 3.7
      run:
        path: bash
        args:
        - -c
        - |
          set -ueo pipefail
	  echo "Copying Source from repos"
          cp -R firebreak-q1-faas-git/* firebreak-q1-faas-build/
          cp -R cyber-security-team-manual-build/build/* firebreak-q1-faas-build/firebreakq1faas/static/ 
          cd firebreak-q1-faas-build
          yum install -y python3 python3-pip git make zip
	  which pip3
          /usr/bin/pip3 install --upgrade pip
          /usr/bin/pip3 install tox
          make zip 
      inputs:
      - name: firebreak-q1-faas-git
      - name: cyber-security-team-manual-build
      outputs:
      - name: firebreak-q1-faas-build

  - task: apply-terraform
    timeout: 15m
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: gdsre/aws-terraform
          tag: 18.04-0.11.13
      params:
        ENV: demo
        ACCOUNT_ID: '489877524855'
        OIDC_CLIENT_ID: ((oidc_client_id))
        OIDC_CLIENT_SECRET: ((oidc_client_secret))
        ACCESS_KEY: ((demo-deploy-user-secret-access-key))
        SECRET_ACCESS_KEY: ((demo-deploy-user-secret-access-key))

      run:
        path: sh
        args:
          - -c
          - |
            set -ue
            echo "Set Access Keys for $ENV $ACCOUNT_ID"

            export "AWS_ACCESS_KEY_ID=${ACCESS_KEY}"
            export "AWS_SECRET_ACCESS_KEY=${SECRET_ACCESS_KEY}"
            export "AWS_DEFAULT_REGION=eu-west-2"

            aws sts get-caller-identity

            # Show what command terraform is running
            set -x
            ROOT_DIR=$(pwd)
            cd firebreak-q1-faas-build/terraform/firebreak-q1-event-normalisation/
            terraform init
            terraform apply -auto-approve \
                  -var "oidc_client_id=${OIDC_CLIENT_ID}" \
                  -var "oidc_client_secret=${OIDC_CLIENT_SECRET}"
      inputs:
        - name: firebreak-q1-faas-build 
