resources:
- name: firebreak-q1-faas-git
  type: git
  source:
    branch: make-image-for-ecr
    private_key: ((firebreak-q1-faas-read-only-ssh-private-key))
    uri: git@github.com:alphagov/firebreak-q1-faas.git
    ignored_paths: [requirements.txt, requirements-dev.txt]

- name: firebreak-q1-faas-requirements-git
  type: git
  source:
    branch: make-image-for-ecr
    private_key: ((firebreak-q1-faas-read-only-ssh-private-key))
    uri: git@github.com:alphagov/firebreak-q1-faas.git
    paths: [requirements.txt]

- name: cyber-security-team-manual-git
  type: git
  source:
    branch: master
    private_key: ((cyber-security-team-manual-read-only-ssh-private-key))
    uri: git@github.com:alphagov/cyber-security-team-manual.git
    ignored_paths: [Gemfile, Gemfile.lock]

- name: cyber-security-team-manual-gemfile-git
  type: git
  source:
    branch: master
    private_key: ((cyber-security-team-manual-read-only-ssh-private-key))
    uri: git@github.com:alphagov/cyber-security-team-manual.git
    paths: [Gemfile, Gemfile.lock]

- name: team-manual-image
  type: docker-image
  source:
    repository: ((readonly_private_ecr_repo_url))
    tag: team-manual-latest

- name: faas-team-manual-image
  type: docker-image
  source:
    repository: ((readonly_private_ecr_repo_url))
    tag: faas-team-manual-latest

jobs:
- name: build-team-manual-image
  build_logs_to_retain: 10
  serial: true
  plan:
    - get: cyber-security-team-manual-gemfile-git
      trigger: true
    - get: firebreak-q1-faas-git
      trigger: true
    - put: team-manual-image
      params:
        dockerfile: firebreak-q1-faas-git/terraform/team-manual-image/Dockerfile
        build: cyber-security-team-manual-gemfile-git

- name: build-faas-team-manual-image
  build_logs_to_retain: 10
  serial: true
  plan:
    - get: firebreak-q1-faas-requirements-git
      trigger: true
    - get: firebreak-q1-faas-git
    - put: faas-team-manual-image
      params:
        dockerfile: firebreak-q1-faas-git/terraform/faas-team-manual-image/Dockerfile
        build: firebreak-q1-faas-git

- name: build-deploy-team-manual-to-faas
  serial: true
  plan:
  - get: firebreak-q1-faas-git
    trigger: true
  - get: cyber-security-team-manual-git
    trigger: true

  - task: build-team-manual
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((readonly_private_ecr_repo_url))
          tag: team-manual-latest
      run:
        path: bash
        args:
        - -c
        - |
          set -ueo pipefail
          echo "Building the Static HTML for the Team Manual"
          cp -R cyber-security-team-manual-git/* cyber-security-team-manual-build/
          cd cyber-security-team-manual-build
          bundle exec middleman build

      inputs:
        - name: cyber-security-team-manual-git
      outputs:
        - name: cyber-security-team-manual-build

  - task: build-team-manual-lambda
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: ((readonly_private_ecr_repo_url))
          tag: faas-team-manual-latest
      run:
        path: bash
        args:
        - -c
        - |
          set -ueo pipefail 
          echo "Building the Python Lambda Function to Host the Team Manual"
          cp -R firebreak-q1-faas-git/* firebreak-q1-faas-build/
          cp -R cyber-security-team-manual-build/build/* firebreak-q1-faas-build/firebreakq1faas/static/
          cd firebreak-q1-faas-build
          make zip

      inputs:
        - name: cyber-security-team-manual-build
        - name: firebreak-q1-faas-git
      outputs:
        - name: firebreak-q1-faas-build

  - task: apply-terraform
    timeout: 15m
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: gdsre/aws-terraform
          tag: 18.04-0.11.13
      params:
        ENV: demo
        ACCOUNT_ID: '489877524855'
        TF_VAR_oidc_client_id: ((oidc_client_id))
        TF_VAR_oidc_client_secret: ((oidc_client_secret))
        AWS_ACCESS_KEY_ID: ((demo-deploy-user-access-key))
        AWS_SECRET_ACCESS_KEY: ((demo-deploy-user-secret-access-key))
        AWS_DEFAULT_REGION: 'eu-west-2'

      run:
        path: sh
        args:
          - -c
          - |
            set -ue
            # Show what command terraform is running
            set -x
            ROOT_DIR=$(pwd)
            cd firebreak-q1-faas-build/terraform/firebreak-q1-event-normalisation/
            terraform init
            terraform apply -auto-approve
      inputs:
        - name: firebreak-q1-faas-build 
